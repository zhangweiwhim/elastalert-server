
# 报警规则名字，全局唯一
name: Test frequency rule send by wechat work

# 定义报警的类型,这里我以frequency为例,当给定时间至少有一定数量的事件出现时触发报警.
# 官方文档:https://elastalert.readthedocs.io/en/latest/ruletypes.html#rule-types
# the frequency rule type alerts when num_events events occur with timeframe time
type: frequency

# 要监控的索引，可以使用通配符
# 例如:index:filebeat-*将会匹配filebeat-2020-12-01这个索引.
# 你还可以使用格式字符串,让%Y,%m,%d分别代表年月日.https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior 
# 如果需要使用这个选项,你必须设置use_strftime_index的值为true.(比选项,字符串类型,无默认值)
index: filebeat-*

# use_strftime_index: true

# 出现的次数
num_events: 1

# 定义十分钟内出现了5次触发报警
timeframe:
  minutes: 10

# filer插件定义我们要过滤的条件具体可以参考官方文档
# http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl.html
filter:
- query:
    query_string:
        query: "message: Exception OR message: error"


#++++++++++++++++++++++++++++++下面主要是减少重复告警的频率+++++++++++++++++++++++++++++
#5分钟内如果有重复报警，那么当name不同时，会当做不同的报警处理 可以是数组呦
query_key:
  - name

# 5分钟内相同的报警不会重复发送
realert:
  minutes: 5

# 指数级扩大 realert 时间，中间如果有报警则按照 5 -> 10 -> 20 -> 40 -> 60 不断增大报警时间到制定的最大时间，
# 如果之后报警减少，则会慢慢恢复原始 realert 时间
exponential_realert:
  hours: 1



#++++++++++++++++++++++++++++++后面主要是定义我们的报警模板具体还是参考官方文档++++++++++
# 调用的报警提供
alert:
- "elastalert_modules.wechat_qiye_alert.WeChatAlerter"

alert_subject: "Error shotting the {} @{}"
alert_subject_args:
  - name
  - "@timestamp"
alert_text_type: alert_text_only
alert_text: |
  ========start=========
  告警程序: elasticsearch_alert
  告警主题: U got an err alert message!
  触发时间: {}
  错误内容: {}
  触发条件: 十分钟内 >= {} 次
  参考来源: {}
  ========end==========
alert_text_args:
 - "@timestamp"
 - message
 - num_hits
 - log.file.path

# wechat work config
corp_id: "ww99192c1e2a31dbeb"
secret: "iUzhvURNCUqlVVdEwo2EnmfCz98EYSFsUkxlk_GaOVI"
agent_id: 1000042
#party_id: ""
user_id: "E007797"
#tag_id: ""
